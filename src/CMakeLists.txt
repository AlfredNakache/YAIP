PROJECT(YAIP++)

OPTION(ENABLE_COVERAGE ON)

CMAKE_MINIMUM_REQUIRED(VERSION 2.8.7)

SET(CMAKE_MODULE_PATH "${CMAKE_SOURCE_DIR}/./../externals/CMake-codecov/cmake" ${CMAKE_MODULE_PATH})

FIND_PACKAGE(codecov)

SET(YAIP_SOURCE
	./../src/YAIP++.h
	./../src/YAIP++.cpp
	./../src/main.cpp
	./../src/main_catch.h
	./../src/main_classic.h
	./../src/main_classic.cpp
	./../src/main_fixtures.h
	./../src/main_fixtures.cpp
	)

ADD_EXECUTABLE(YAIP++ ${YAIP_SOURCE})
ADD_COVERAGE(YAIP++)

INCLUDE(CheckCXXCompilerFlag)
CHECK_CXX_COMPILER_FLAG("-std=c++11" COMPILER_SUPPORTS_CXX11)
CHECK_CXX_COMPILER_FLAG("-std=c++0x" COMPILER_SUPPORTS_CXX0X)
IF(COMPILER_SUPPORTS_CXX11)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++11")
ELSEIF(COMPILER_SUPPORTS_CXX0X)
	SET(CMAKE_CXX_FLAGS "${CMAKE_CXX_FLAGS} -std=c++0x")
ELSE()
	MESSAGE(STATUS "The compiler ${CMAKE_CXX_COMPILER} has no C++11 support. Please use a different C++ compiler.")
ENDIF()

SET(CMAKE_BUILD_TYPE Debug Release)
SET(CMAKE_CXX_FLAGS_DEBUG "${CMAKE_CXX_FLAGS_DEBUG} -Wall")
SET(CMAKE_CXX_FLAGS_RELEASE "${CMAKE_CXX_FLAGS_RELEASE} -Wall")
SET(CMAKE_RUNTIME_OUTPUT_DIRECTORY build)

